// Code generated by goctl. DO NOT EDIT.
// Source: job.proto

package server

import (
	"context"

	"rpc/app/service/job/rpc/internal/logic"
	"rpc/app/service/job/rpc/internal/svc"
	"rpc/app/service/job/rpc/pb"
)

type JobServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedJobServer
}

func NewJobServer(svcCtx *svc.ServiceContext) *JobServer {
	return &JobServer{
		svcCtx: svcCtx,
	}
}

func (s *JobServer) CountJob(ctx context.Context, in *pb.CountJobReq) (*pb.CountJobResp, error) {
	l := logic.NewCountJobLogic(ctx, s.svcCtx)
	return l.CountJob(in)
}

func (s *JobServer) JoinJob(ctx context.Context, in *pb.JoinJobReq) (*pb.JoinJobResp, error) {
	l := logic.NewJoinJobLogic(ctx, s.svcCtx)
	return l.JoinJob(in)
}

func (s *JobServer) ViewJobs(ctx context.Context, in *pb.ViewJobsReq) (*pb.ViewJobsResp, error) {
	l := logic.NewViewJobsLogic(ctx, s.svcCtx)
	return l.ViewJobs(in)
}

func (s *JobServer) ViewWord(ctx context.Context, in *pb.ViewWordReq) (*pb.ViewWordResp, error) {
	l := logic.NewViewWordLogic(ctx, s.svcCtx)
	return l.ViewWord(in)
}
